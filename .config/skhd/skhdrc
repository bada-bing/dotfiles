# ################################################################ #
# THE FOLLOWING IS AN EXPLANATION OF THE GRAMMAR THAT SKHD PARSES. #
# FOR SIMPLE EXAMPLE MAPPINGS LOOK FURTHER DOWN THIS FILE..        #
# ################################################################ #

# A list of all built-in modifier and literal keywords can
# be found at https://github.com/koekeishiya/skhd/issues/1
#
#   command   = command is executed through '$SHELL -c' and
#               follows valid shell syntax. if the $SHELL environment
#               variable is not set, it will default to '/bin/bash'.
#               when bash is used, the ';' delimeter can be specified
#               to chain commands.
#
#               to allow a command to extend into multiple lines,
#               prepend '\' at the end of the previous line.
#
#               an EOL character signifies the end of the bind.

# ############################################################### #
# THE FOLLOWING SECTION CONTAIN SIMPLE MAPPINGS DEMONSTRATING HOW #
# TO INTERACT WITH THE YABAI WM. THESE ARE SUPPOSED TO BE USED AS #
# A REFERENCE ONLY, WHEN MAKING YOUR OWN CONFIGURATION..          #
# ############################################################### #

# ❗ prev and next are based on mission-control index
# prev is not the same as recent (recent is dynamic)


# Stackline
# Focus window up/down in stack
# hyper - a : yabai -m space --focus 1 && yabai -m window --focus stack.next || yabai -m window --focus stack.first
# hyper - z : yabai -m space --focus 1 && yabai -m window --focus stack.prev || yabai -m window --focus stack.last
# 
# hyper - s : yabai -m space --focus 3 && yabai -m window --focus stack.next || yabai -m window --focus stack.first
# hyper - c : yabai -m space --focus 3 && yabai -m window --focus stack.prev || yabai -m window --focus stack.last
# hyper - a : yabai -m space --focus 1
# hyper - r : yabai -m space --focus 2
# hyper - s : yabai -m space --focus 3
# hyper - t : yabai -m space --focus 4

# Hyper + C to cycle to the previous or next window in the current stack
hyper - 6 : yabai -m window --focus stack.prev ||yabai -m window --focus stack.last
hyper - 7 : yabai -m window --focus stack.next || yabai -m window --focus stack.first

# Add the active window  to the window or stack to the {direction}
# Note that this only works when the active window does *not* already belong to a stack
cmd + ctrl - left  : yabai -m window west --stack $(yabai -m query --windows --window | jq -r '.id')
cmd + ctrl - down  : yabai -m window south --stack $(yabai -m query --windows --window | jq -r '.id')
cmd + ctrl - up    : yabai -m window north --stack $(yabai -m query --windows --window | jq -r '.id')
cmd + ctrl - right : yabai -m window east --stack $(yabai -m query --windows --window | jq -r '.id')
# ---

# ================================Window settings================================
# focus window
# hyper - h : yabai -m window --focus west
# hyper - j : yabai -m window --focus south
# hyper - k : yabai -m window --focus north
# hyper - l : yabai -m window --focus east

# Swap managed window position
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

# Move managed window position
shift + cmd - h : yabai -m window --warp west
shift + cmd - j : yabai -m window --warp south
shift + cmd - k : yabai -m window --warp north
shift + cmd - l : yabai -m window --warp east

# balance size of windows
shift + alt - 0 : yabai -m space --balance


shift + cmd - f : yabai -m window --focus prev
# shift + cmd - p : yabai -m window --focus next # one of the most important shortcuts in VS Code
shift + alt + ctrl - x : yabai -m window --focus sibling # sibling you need three windows to understand it 

# make floating window fill screen
# shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# create additional spaces
# yabai -m space --create

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && yabai -m window --space "${index}" && yabai -m space --focus "${index}"
cmd + alt - n : yabai -m space --create && \
                 index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                 yabai -m space --focus "${index}"

# close focused window
# alt - w : chunkc tiling::window --close

# fast focus desktop
hyper - x : yabai -m space --focus recent
hyper - 1 : yabai -m space --focus 1
hyper - 2 : yabai -m space --focus 2
hyper - 3 : yabai -m space --focus 3
hyper - 4 : yabai -m space --focus 4
hyper - 5 : yabai -m space --focus 5
# hyper - 6 : yabai -m space --focus 6
# hyper - 7 : yabai -m space --focus 7
# hyper - 8 : yabai -m space --focus 8

# fast focus desktop (planck ez)
# hyper - a : yabai -m space --focus 1
# hyper - r : yabai -m space --focus 2
# hyper - s : yabai -m space --focus 3
# hyper - t : yabai -m space --focus 4
# hyper - n : yabai -m space --focus 5
# hyper - e: yabai -m space --focus 6

hyper - v: yabai -m window --display recent

# send window to desktop and follow focus
# shift + cmd - z : yabai -m window --space next; yabai -m space --focus next
# hyper - g : yabai -m window --space next; yabai -m space --focus next
# shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2

# focus display (monitor)
# ❗ Move to next display is managed by RayCast!
# ctrl + alt - z  : yabai -m display --focus prev
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to display and follow focus
# ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1

# move floating window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20

# increase window size (COMMANDS ARE WRONG, FIX before using)
# hyper - right : yabai -m window --resize left:-20:0
# hyper - up : yabai -m window --resize top:0:-20
# 
# decrease window size
# hyper - down : yabai -m window --resize bottom:0:20
# hyper - left : yabai -m window --resize top:0:20 # conflicts with macos native close window

# set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west

# toggle window zoom
# alt - f : yabai -m window --toggle zoom-parent # it looks like it does the same thing as the zoom-fullscreen
alt - d : yabai -m window --toggle zoom-fullscreen 

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
alt - t : yabai -m window --toggle float;\
          yabai -m window --grid 4:4:1:1:2:2

# toggle sticky(+float), topmost, picture-in-picture
alt - p : yabai -m window --toggle sticky;\
          yabai -m window --toggle topmost;\
          yabai -m window --toggle pip



# Move current window to the previously focused space
shift + alt + ctrl - v : yabai -m window --space recent
